<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opencensus/proto/metrics/v1/metrics.proto

namespace Opencensus\Proto\Metrics\V1\DistributionValue;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>opencensus.proto.metrics.v1.DistributionValue.Bucket</code>
 */
class Bucket extends \Google\Protobuf\Internal\Message
{
    /**
     * The number of values in each bucket of the histogram, as described in
     * bucket_bounds.
     *
     * Generated from protobuf field <code>int64 count = 1;</code>
     */
    private $count = 0;
    /**
     * If the distribution does not have a histogram, then omit this field.
     *
     * Generated from protobuf field <code>.opencensus.proto.metrics.v1.DistributionValue.Exemplar exemplar = 2;</code>
     */
    private $exemplar = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $count
     *           The number of values in each bucket of the histogram, as described in
     *           bucket_bounds.
     *     @type \Opencensus\Proto\Metrics\V1\DistributionValue\Exemplar $exemplar
     *           If the distribution does not have a histogram, then omit this field.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opencensus\Proto\Metrics\V1\Metrics::initOnce();
        parent::__construct($data);
    }

    /**
     * The number of values in each bucket of the histogram, as described in
     * bucket_bounds.
     *
     * Generated from protobuf field <code>int64 count = 1;</code>
     * @return int|string
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * The number of values in each bucket of the histogram, as described in
     * bucket_bounds.
     *
     * Generated from protobuf field <code>int64 count = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->count = $var;

        return $this;
    }

    /**
     * If the distribution does not have a histogram, then omit this field.
     *
     * Generated from protobuf field <code>.opencensus.proto.metrics.v1.DistributionValue.Exemplar exemplar = 2;</code>
     * @return \Opencensus\Proto\Metrics\V1\DistributionValue\Exemplar
     */
    public function getExemplar()
    {
        return $this->exemplar;
    }

    /**
     * If the distribution does not have a histogram, then omit this field.
     *
     * Generated from protobuf field <code>.opencensus.proto.metrics.v1.DistributionValue.Exemplar exemplar = 2;</code>
     * @param \Opencensus\Proto\Metrics\V1\DistributionValue\Exemplar $var
     * @return $this
     */
    public function setExemplar($var)
    {
        GPBUtil::checkMessage($var, \Opencensus\Proto\Metrics\V1\DistributionValue_Exemplar::class);
        $this->exemplar = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Bucket::class, \Opencensus\Proto\Metrics\V1\DistributionValue_Bucket::class);

