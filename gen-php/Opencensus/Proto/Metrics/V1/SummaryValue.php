<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opencensus/proto/metrics/v1/metrics.proto

namespace Opencensus\Proto\Metrics\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The start_timestamp only applies to the count and sum in the SummaryValue.
 *
 * Generated from protobuf message <code>opencensus.proto.metrics.v1.SummaryValue</code>
 */
class SummaryValue extends \Google\Protobuf\Internal\Message
{
    /**
     * The total number of recorded values since start_time. Optional since
     * some systems don't expose this.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value count = 1;</code>
     */
    private $count = null;
    /**
     * The total sum of recorded values since start_time. Optional since some
     * systems don't expose this. If count is zero then this field must be zero.
     * This field must be unset if the sum is not available.
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue sum = 2;</code>
     */
    private $sum = null;
    /**
     * Values calculated over an arbitrary time window.
     *
     * Generated from protobuf field <code>.opencensus.proto.metrics.v1.SummaryValue.Snapshot snapshot = 3;</code>
     */
    private $snapshot = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Int64Value $count
     *           The total number of recorded values since start_time. Optional since
     *           some systems don't expose this.
     *     @type \Google\Protobuf\DoubleValue $sum
     *           The total sum of recorded values since start_time. Optional since some
     *           systems don't expose this. If count is zero then this field must be zero.
     *           This field must be unset if the sum is not available.
     *     @type \Opencensus\Proto\Metrics\V1\SummaryValue\Snapshot $snapshot
     *           Values calculated over an arbitrary time window.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opencensus\Proto\Metrics\V1\Metrics::initOnce();
        parent::__construct($data);
    }

    /**
     * The total number of recorded values since start_time. Optional since
     * some systems don't expose this.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value count = 1;</code>
     * @return \Google\Protobuf\Int64Value
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * Returns the unboxed value from <code>getCount()</code>

     * The total number of recorded values since start_time. Optional since
     * some systems don't expose this.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value count = 1;</code>
     * @return int|string|null
     */
    public function getCountUnwrapped()
    {
        $wrapper = $this->getCount();
        return is_null($wrapper) ? null : $wrapper->getValue();
    }

    /**
     * The total number of recorded values since start_time. Optional since
     * some systems don't expose this.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value count = 1;</code>
     * @param \Google\Protobuf\Int64Value $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Int64Value::class);
        $this->count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\Int64Value object.

     * The total number of recorded values since start_time. Optional since
     * some systems don't expose this.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value count = 1;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setCountUnwrapped($var)
    {
        $wrappedVar = is_null($var) ? null : new \Google\Protobuf\Int64Value(['value' => $var]);
        return $this->setCount($wrappedVar);
    }

    /**
     * The total sum of recorded values since start_time. Optional since some
     * systems don't expose this. If count is zero then this field must be zero.
     * This field must be unset if the sum is not available.
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue sum = 2;</code>
     * @return \Google\Protobuf\DoubleValue
     */
    public function getSum()
    {
        return $this->sum;
    }

    /**
     * Returns the unboxed value from <code>getSum()</code>

     * The total sum of recorded values since start_time. Optional since some
     * systems don't expose this. If count is zero then this field must be zero.
     * This field must be unset if the sum is not available.
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue sum = 2;</code>
     * @return float|null
     */
    public function getSumUnwrapped()
    {
        $wrapper = $this->getSum();
        return is_null($wrapper) ? null : $wrapper->getValue();
    }

    /**
     * The total sum of recorded values since start_time. Optional since some
     * systems don't expose this. If count is zero then this field must be zero.
     * This field must be unset if the sum is not available.
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue sum = 2;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setSum($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->sum = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * The total sum of recorded values since start_time. Optional since some
     * systems don't expose this. If count is zero then this field must be zero.
     * This field must be unset if the sum is not available.
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue sum = 2;</code>
     * @param float|null $var
     * @return $this
     */
    public function setSumUnwrapped($var)
    {
        $wrappedVar = is_null($var) ? null : new \Google\Protobuf\DoubleValue(['value' => $var]);
        return $this->setSum($wrappedVar);
    }

    /**
     * Values calculated over an arbitrary time window.
     *
     * Generated from protobuf field <code>.opencensus.proto.metrics.v1.SummaryValue.Snapshot snapshot = 3;</code>
     * @return \Opencensus\Proto\Metrics\V1\SummaryValue\Snapshot
     */
    public function getSnapshot()
    {
        return $this->snapshot;
    }

    /**
     * Values calculated over an arbitrary time window.
     *
     * Generated from protobuf field <code>.opencensus.proto.metrics.v1.SummaryValue.Snapshot snapshot = 3;</code>
     * @param \Opencensus\Proto\Metrics\V1\SummaryValue\Snapshot $var
     * @return $this
     */
    public function setSnapshot($var)
    {
        GPBUtil::checkMessage($var, \Opencensus\Proto\Metrics\V1\SummaryValue_Snapshot::class);
        $this->snapshot = $var;

        return $this;
    }

}

