<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opencensus/proto/trace/v1/trace.proto

namespace Opencensus\Proto\Trace\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A string that might be shortened to a specified length.
 *
 * Generated from protobuf message <code>opencensus.proto.trace.v1.TruncatableString</code>
 */
class TruncatableString extends \Google\Protobuf\Internal\Message
{
    /**
     * The shortened string. For example, if the original string was 500 bytes long and
     * the limit of the string was 128 bytes, then this value contains the first 128
     * bytes of the 500-byte string. Note that truncation always happens on a
     * character boundary, to ensure that a truncated string is still valid UTF-8.
     * Because it may contain multi-byte characters, the size of the truncated string
     * may be less than the truncation limit.
     *
     * Generated from protobuf field <code>string value = 1;</code>
     */
    private $value = '';
    /**
     * The number of bytes removed from the original string. If this
     * value is 0, then the string was not shortened.
     *
     * Generated from protobuf field <code>int32 truncated_byte_count = 2;</code>
     */
    private $truncated_byte_count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $value
     *           The shortened string. For example, if the original string was 500 bytes long and
     *           the limit of the string was 128 bytes, then this value contains the first 128
     *           bytes of the 500-byte string. Note that truncation always happens on a
     *           character boundary, to ensure that a truncated string is still valid UTF-8.
     *           Because it may contain multi-byte characters, the size of the truncated string
     *           may be less than the truncation limit.
     *     @type int $truncated_byte_count
     *           The number of bytes removed from the original string. If this
     *           value is 0, then the string was not shortened.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opencensus\Proto\Trace\V1\Trace::initOnce();
        parent::__construct($data);
    }

    /**
     * The shortened string. For example, if the original string was 500 bytes long and
     * the limit of the string was 128 bytes, then this value contains the first 128
     * bytes of the 500-byte string. Note that truncation always happens on a
     * character boundary, to ensure that a truncated string is still valid UTF-8.
     * Because it may contain multi-byte characters, the size of the truncated string
     * may be less than the truncation limit.
     *
     * Generated from protobuf field <code>string value = 1;</code>
     * @return string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * The shortened string. For example, if the original string was 500 bytes long and
     * the limit of the string was 128 bytes, then this value contains the first 128
     * bytes of the 500-byte string. Note that truncation always happens on a
     * character boundary, to ensure that a truncated string is still valid UTF-8.
     * Because it may contain multi-byte characters, the size of the truncated string
     * may be less than the truncation limit.
     *
     * Generated from protobuf field <code>string value = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->value = $var;

        return $this;
    }

    /**
     * The number of bytes removed from the original string. If this
     * value is 0, then the string was not shortened.
     *
     * Generated from protobuf field <code>int32 truncated_byte_count = 2;</code>
     * @return int
     */
    public function getTruncatedByteCount()
    {
        return $this->truncated_byte_count;
    }

    /**
     * The number of bytes removed from the original string. If this
     * value is 0, then the string was not shortened.
     *
     * Generated from protobuf field <code>int32 truncated_byte_count = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTruncatedByteCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->truncated_byte_count = $var;

        return $this;
    }

}

