<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opencensus/proto/trace/v1/trace.proto

namespace Opencensus\Proto\Trace\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A description of a binary module.
 *
 * Generated from protobuf message <code>opencensus.proto.trace.v1.Module</code>
 */
class Module extends \Google\Protobuf\Internal\Message
{
    /**
     * TODO: document the meaning of this field.
     * For example: main binary, kernel modules, and dynamic libraries
     * such as libc.so, sharedlib.so.
     *
     * Generated from protobuf field <code>.opencensus.proto.trace.v1.TruncatableString module = 1;</code>
     */
    private $module = null;
    /**
     * A unique identifier for the module, usually a hash of its
     * contents.
     *
     * Generated from protobuf field <code>.opencensus.proto.trace.v1.TruncatableString build_id = 2;</code>
     */
    private $build_id = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Opencensus\Proto\Trace\V1\TruncatableString $module
     *           TODO: document the meaning of this field.
     *           For example: main binary, kernel modules, and dynamic libraries
     *           such as libc.so, sharedlib.so.
     *     @type \Opencensus\Proto\Trace\V1\TruncatableString $build_id
     *           A unique identifier for the module, usually a hash of its
     *           contents.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opencensus\Proto\Trace\V1\Trace::initOnce();
        parent::__construct($data);
    }

    /**
     * TODO: document the meaning of this field.
     * For example: main binary, kernel modules, and dynamic libraries
     * such as libc.so, sharedlib.so.
     *
     * Generated from protobuf field <code>.opencensus.proto.trace.v1.TruncatableString module = 1;</code>
     * @return \Opencensus\Proto\Trace\V1\TruncatableString
     */
    public function getModule()
    {
        return $this->module;
    }

    /**
     * TODO: document the meaning of this field.
     * For example: main binary, kernel modules, and dynamic libraries
     * such as libc.so, sharedlib.so.
     *
     * Generated from protobuf field <code>.opencensus.proto.trace.v1.TruncatableString module = 1;</code>
     * @param \Opencensus\Proto\Trace\V1\TruncatableString $var
     * @return $this
     */
    public function setModule($var)
    {
        GPBUtil::checkMessage($var, \Opencensus\Proto\Trace\V1\TruncatableString::class);
        $this->module = $var;

        return $this;
    }

    /**
     * A unique identifier for the module, usually a hash of its
     * contents.
     *
     * Generated from protobuf field <code>.opencensus.proto.trace.v1.TruncatableString build_id = 2;</code>
     * @return \Opencensus\Proto\Trace\V1\TruncatableString
     */
    public function getBuildId()
    {
        return $this->build_id;
    }

    /**
     * A unique identifier for the module, usually a hash of its
     * contents.
     *
     * Generated from protobuf field <code>.opencensus.proto.trace.v1.TruncatableString build_id = 2;</code>
     * @param \Opencensus\Proto\Trace\V1\TruncatableString $var
     * @return $this
     */
    public function setBuildId($var)
    {
        GPBUtil::checkMessage($var, \Opencensus\Proto\Trace\V1\TruncatableString::class);
        $this->build_id = $var;

        return $this;
    }

}

