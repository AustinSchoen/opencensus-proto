<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opencensus/proto/trace/v1/trace.proto

namespace Opencensus\Proto\Trace\V1\Span;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A time-stamped annotation or message event in the Span.
 *
 * Generated from protobuf message <code>opencensus.proto.trace.v1.Span.TimeEvent</code>
 */
class TimeEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * The time the event occurred.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 1;</code>
     */
    private $time = null;
    protected $value;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $time
     *           The time the event occurred.
     *     @type \Opencensus\Proto\Trace\V1\Span\TimeEvent\Annotation $annotation
     *           A text annotation with a set of attributes.
     *     @type \Opencensus\Proto\Trace\V1\Span\TimeEvent\MessageEvent $message_event
     *           An event describing a message sent/received between Spans.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opencensus\Proto\Trace\V1\Trace::initOnce();
        parent::__construct($data);
    }

    /**
     * The time the event occurred.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 1;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getTime()
    {
        return $this->time;
    }

    /**
     * The time the event occurred.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp time = 1;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->time = $var;

        return $this;
    }

    /**
     * A text annotation with a set of attributes.
     *
     * Generated from protobuf field <code>.opencensus.proto.trace.v1.Span.TimeEvent.Annotation annotation = 2;</code>
     * @return \Opencensus\Proto\Trace\V1\Span\TimeEvent\Annotation
     */
    public function getAnnotation()
    {
        return $this->readOneof(2);
    }

    /**
     * A text annotation with a set of attributes.
     *
     * Generated from protobuf field <code>.opencensus.proto.trace.v1.Span.TimeEvent.Annotation annotation = 2;</code>
     * @param \Opencensus\Proto\Trace\V1\Span\TimeEvent\Annotation $var
     * @return $this
     */
    public function setAnnotation($var)
    {
        GPBUtil::checkMessage($var, \Opencensus\Proto\Trace\V1\Span_TimeEvent_Annotation::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * An event describing a message sent/received between Spans.
     *
     * Generated from protobuf field <code>.opencensus.proto.trace.v1.Span.TimeEvent.MessageEvent message_event = 3;</code>
     * @return \Opencensus\Proto\Trace\V1\Span\TimeEvent\MessageEvent
     */
    public function getMessageEvent()
    {
        return $this->readOneof(3);
    }

    /**
     * An event describing a message sent/received between Spans.
     *
     * Generated from protobuf field <code>.opencensus.proto.trace.v1.Span.TimeEvent.MessageEvent message_event = 3;</code>
     * @param \Opencensus\Proto\Trace\V1\Span\TimeEvent\MessageEvent $var
     * @return $this
     */
    public function setMessageEvent($var)
    {
        GPBUtil::checkMessage($var, \Opencensus\Proto\Trace\V1\Span_TimeEvent_MessageEvent::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getValue()
    {
        return $this->whichOneof("value");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(TimeEvent::class, \Opencensus\Proto\Trace\V1\Span_TimeEvent::class);

