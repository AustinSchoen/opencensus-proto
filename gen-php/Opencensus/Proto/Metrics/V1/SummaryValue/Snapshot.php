<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opencensus/proto/metrics/v1/metrics.proto

namespace Opencensus\Proto\Metrics\V1\SummaryValue;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The values in this message can be reset at arbitrary unknown times, with
 * the requirement that all of them are reset at the same time.
 *
 * Generated from protobuf message <code>opencensus.proto.metrics.v1.SummaryValue.Snapshot</code>
 */
class Snapshot extends \Google\Protobuf\Internal\Message
{
    /**
     * The number of values in the snapshot. Optional since some systems don't
     * expose this.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value count = 1;</code>
     */
    private $count = null;
    /**
     * The sum of values in the snapshot. Optional since some systems don't
     * expose this. If count is zero then this field must be zero or not set
     * (if not supported).
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue sum = 2;</code>
     */
    private $sum = null;
    /**
     * A list of values at different percentiles of the distribution calculated
     * from the current snapshot. The percentiles must be strictly increasing.
     *
     * Generated from protobuf field <code>repeated .opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile percentile_values = 3;</code>
     */
    private $percentile_values;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Int64Value $count
     *           The number of values in the snapshot. Optional since some systems don't
     *           expose this.
     *     @type \Google\Protobuf\DoubleValue $sum
     *           The sum of values in the snapshot. Optional since some systems don't
     *           expose this. If count is zero then this field must be zero or not set
     *           (if not supported).
     *     @type \Opencensus\Proto\Metrics\V1\SummaryValue\Snapshot\ValueAtPercentile[]|\Google\Protobuf\Internal\RepeatedField $percentile_values
     *           A list of values at different percentiles of the distribution calculated
     *           from the current snapshot. The percentiles must be strictly increasing.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opencensus\Proto\Metrics\V1\Metrics::initOnce();
        parent::__construct($data);
    }

    /**
     * The number of values in the snapshot. Optional since some systems don't
     * expose this.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value count = 1;</code>
     * @return \Google\Protobuf\Int64Value
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * Returns the unboxed value from <code>getCount()</code>

     * The number of values in the snapshot. Optional since some systems don't
     * expose this.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value count = 1;</code>
     * @return int|string|null
     */
    public function getCountUnwrapped()
    {
        $wrapper = $this->getCount();
        return is_null($wrapper) ? null : $wrapper->getValue();
    }

    /**
     * The number of values in the snapshot. Optional since some systems don't
     * expose this.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value count = 1;</code>
     * @param \Google\Protobuf\Int64Value $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Int64Value::class);
        $this->count = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\Int64Value object.

     * The number of values in the snapshot. Optional since some systems don't
     * expose this.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value count = 1;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setCountUnwrapped($var)
    {
        $wrappedVar = is_null($var) ? null : new \Google\Protobuf\Int64Value(['value' => $var]);
        return $this->setCount($wrappedVar);
    }

    /**
     * The sum of values in the snapshot. Optional since some systems don't
     * expose this. If count is zero then this field must be zero or not set
     * (if not supported).
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue sum = 2;</code>
     * @return \Google\Protobuf\DoubleValue
     */
    public function getSum()
    {
        return $this->sum;
    }

    /**
     * Returns the unboxed value from <code>getSum()</code>

     * The sum of values in the snapshot. Optional since some systems don't
     * expose this. If count is zero then this field must be zero or not set
     * (if not supported).
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue sum = 2;</code>
     * @return float|null
     */
    public function getSumUnwrapped()
    {
        $wrapper = $this->getSum();
        return is_null($wrapper) ? null : $wrapper->getValue();
    }

    /**
     * The sum of values in the snapshot. Optional since some systems don't
     * expose this. If count is zero then this field must be zero or not set
     * (if not supported).
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue sum = 2;</code>
     * @param \Google\Protobuf\DoubleValue $var
     * @return $this
     */
    public function setSum($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\DoubleValue::class);
        $this->sum = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\DoubleValue object.

     * The sum of values in the snapshot. Optional since some systems don't
     * expose this. If count is zero then this field must be zero or not set
     * (if not supported).
     *
     * Generated from protobuf field <code>.google.protobuf.DoubleValue sum = 2;</code>
     * @param float|null $var
     * @return $this
     */
    public function setSumUnwrapped($var)
    {
        $wrappedVar = is_null($var) ? null : new \Google\Protobuf\DoubleValue(['value' => $var]);
        return $this->setSum($wrappedVar);
    }

    /**
     * A list of values at different percentiles of the distribution calculated
     * from the current snapshot. The percentiles must be strictly increasing.
     *
     * Generated from protobuf field <code>repeated .opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile percentile_values = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPercentileValues()
    {
        return $this->percentile_values;
    }

    /**
     * A list of values at different percentiles of the distribution calculated
     * from the current snapshot. The percentiles must be strictly increasing.
     *
     * Generated from protobuf field <code>repeated .opencensus.proto.metrics.v1.SummaryValue.Snapshot.ValueAtPercentile percentile_values = 3;</code>
     * @param \Opencensus\Proto\Metrics\V1\SummaryValue\Snapshot\ValueAtPercentile[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPercentileValues($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Opencensus\Proto\Metrics\V1\SummaryValue\Snapshot\ValueAtPercentile::class);
        $this->percentile_values = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Snapshot::class, \Opencensus\Proto\Metrics\V1\SummaryValue_Snapshot::class);

