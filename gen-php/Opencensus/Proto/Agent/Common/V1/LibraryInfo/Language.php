<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opencensus/proto/agent/common/v1/common.proto

namespace Opencensus\Proto\Agent\Common\V1\LibraryInfo;

use UnexpectedValueException;

/**
 * Protobuf type <code>opencensus.proto.agent.common.v1.LibraryInfo.Language</code>
 */
class Language
{
    /**
     * Generated from protobuf enum <code>LANGUAGE_UNSPECIFIED = 0;</code>
     */
    const LANGUAGE_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>CPP = 1;</code>
     */
    const CPP = 1;
    /**
     * Generated from protobuf enum <code>C_SHARP = 2;</code>
     */
    const C_SHARP = 2;
    /**
     * Generated from protobuf enum <code>ERLANG = 3;</code>
     */
    const ERLANG = 3;
    /**
     * Generated from protobuf enum <code>GO_LANG = 4;</code>
     */
    const GO_LANG = 4;
    /**
     * Generated from protobuf enum <code>JAVA = 5;</code>
     */
    const JAVA = 5;
    /**
     * Generated from protobuf enum <code>NODE_JS = 6;</code>
     */
    const NODE_JS = 6;
    /**
     * Generated from protobuf enum <code>PHP = 7;</code>
     */
    const PHP = 7;
    /**
     * Generated from protobuf enum <code>PYTHON = 8;</code>
     */
    const PYTHON = 8;
    /**
     * Generated from protobuf enum <code>RUBY = 9;</code>
     */
    const RUBY = 9;
    /**
     * Generated from protobuf enum <code>WEB_JS = 10;</code>
     */
    const WEB_JS = 10;

    private static $valueToName = [
        self::LANGUAGE_UNSPECIFIED => 'LANGUAGE_UNSPECIFIED',
        self::CPP => 'CPP',
        self::C_SHARP => 'C_SHARP',
        self::ERLANG => 'ERLANG',
        self::GO_LANG => 'GO_LANG',
        self::JAVA => 'JAVA',
        self::NODE_JS => 'NODE_JS',
        self::PHP => 'PHP',
        self::PYTHON => 'PYTHON',
        self::RUBY => 'RUBY',
        self::WEB_JS => 'WEB_JS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Language::class, \Opencensus\Proto\Agent\Common\V1\LibraryInfo_Language::class);

