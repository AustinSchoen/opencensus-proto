<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opencensus/proto/stats/v1/stats.proto

namespace Opencensus\Proto\Stats\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Measure .
 *
 * Generated from protobuf message <code>opencensus.proto.stats.v1.Measure</code>
 */
class Measure extends \Google\Protobuf\Internal\Message
{
    /**
     * A string by which the measure will be referred to, e.g. "rpc_server_latency". Names MUST be
     * unique within the library.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * Describes the measure, e.g. "RPC latency in seconds".
     *
     * Generated from protobuf field <code>string description = 2;</code>
     */
    private $description = '';
    /**
     * Describes the unit used for the Measure. Follows the format described by
     * http://unitsofmeasure.org/ucum.html.
     *
     * Generated from protobuf field <code>string unit = 3;</code>
     */
    private $unit = '';
    /**
     * The type used for this Measure.
     *
     * Generated from protobuf field <code>.opencensus.proto.stats.v1.Measure.Type type = 4;</code>
     */
    private $type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           A string by which the measure will be referred to, e.g. "rpc_server_latency". Names MUST be
     *           unique within the library.
     *     @type string $description
     *           Describes the measure, e.g. "RPC latency in seconds".
     *     @type string $unit
     *           Describes the unit used for the Measure. Follows the format described by
     *           http://unitsofmeasure.org/ucum.html.
     *     @type int $type
     *           The type used for this Measure.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opencensus\Proto\Stats\V1\Stats::initOnce();
        parent::__construct($data);
    }

    /**
     * A string by which the measure will be referred to, e.g. "rpc_server_latency". Names MUST be
     * unique within the library.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * A string by which the measure will be referred to, e.g. "rpc_server_latency". Names MUST be
     * unique within the library.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Describes the measure, e.g. "RPC latency in seconds".
     *
     * Generated from protobuf field <code>string description = 2;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Describes the measure, e.g. "RPC latency in seconds".
     *
     * Generated from protobuf field <code>string description = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Describes the unit used for the Measure. Follows the format described by
     * http://unitsofmeasure.org/ucum.html.
     *
     * Generated from protobuf field <code>string unit = 3;</code>
     * @return string
     */
    public function getUnit()
    {
        return $this->unit;
    }

    /**
     * Describes the unit used for the Measure. Follows the format described by
     * http://unitsofmeasure.org/ucum.html.
     *
     * Generated from protobuf field <code>string unit = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setUnit($var)
    {
        GPBUtil::checkString($var, True);
        $this->unit = $var;

        return $this;
    }

    /**
     * The type used for this Measure.
     *
     * Generated from protobuf field <code>.opencensus.proto.stats.v1.Measure.Type type = 4;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * The type used for this Measure.
     *
     * Generated from protobuf field <code>.opencensus.proto.stats.v1.Measure.Type type = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Opencensus\Proto\Stats\V1\Measure_Type::class);
        $this->type = $var;

        return $this;
    }

}

